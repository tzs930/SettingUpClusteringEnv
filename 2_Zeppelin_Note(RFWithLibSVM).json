{"paragraphs":[{"text":"import org.apache.spark.mllib.tree.RandomForest\nimport org.apache.spark.mllib.util.MLUtils\n\n//credentials\nsc.hadoopConfiguration.set(\"fs.s3a.access.key\", \"Enter your Access Key\")\nsc.hadoopConfiguration.set(\"fs.s3a.secret.key\", \"Enter Your Secret Key\")","user":"anonymous","dateUpdated":"2017-03-16T13:37:09+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark.mllib.tree.RandomForest\n\nimport org.apache.spark.mllib.util.MLUtils\n"}]},"apps":[],"jobName":"paragraph_1489671420909_166700626","id":"20170306-085940_1694880428","dateCreated":"2017-03-16T13:37:00+0000","dateStarted":"2017-03-16T13:37:09+0000","dateFinished":"2017-03-16T13:37:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1646"},{"text":"//import data from Amazon S3\nval data = MLUtils.loadLibSVMFile(sc, \"s3n://cvip-rf2/data.txt\")","user":"anonymous","dateUpdated":"2017-03-16T13:37:37+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ndata: org.apache.spark.rdd.RDD[org.apache.spark.mllib.regression.LabeledPoint] = MapPartitionsRDD[6] at map at MLUtils.scala:84\n"}]},"apps":[],"jobName":"paragraph_1489671420911_167470124","id":"20170306-090345_1888598805","dateCreated":"2017-03-16T13:37:00+0000","dateStarted":"2017-03-16T13:37:37+0000","dateFinished":"2017-03-16T13:38:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1647"},{"text":"// Split the data into training and test sets (30% held out for testing) \nval splits = data.randomSplit(Array(0.1, 0.1)) \nval (trainingData, testData) = (splits(0), splits(1)) ","user":"anonymous","dateUpdated":"2017-03-16T13:39:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nsplits: Array[org.apache.spark.rdd.RDD[org.apache.spark.mllib.regression.LabeledPoint]] = Array(MapPartitionsRDD[7] at randomSplit at <console>:32, MapPartitionsRDD[8] at randomSplit at <console>:32)\n\n\ntrainingData: org.apache.spark.rdd.RDD[org.apache.spark.mllib.regression.LabeledPoint] = MapPartitionsRDD[7] at randomSplit at <console>:32\ntestData: org.apache.spark.rdd.RDD[org.apache.spark.mllib.regression.LabeledPoint] = MapPartitionsRDD[8] at randomSplit at <console>:32\n"}]},"apps":[],"jobName":"paragraph_1489671420911_167470124","id":"20170306-090551_2098766717","dateCreated":"2017-03-16T13:37:00+0000","dateStarted":"2017-03-16T13:39:16+0000","dateFinished":"2017-03-16T13:39:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1648"},{"text":"// Train a RandomForest model. \n// Empty categoricalFeaturesInfo indicates all features are continuous. \nval numClasses = 32\nval categoricalFeaturesInfo = Map[Int, Int]() \nval numTrees = 3 // Use more in practice. \nval featureSubsetStrategy = \"auto\" // Let the algorithm choose. \nval impurity = \"gini\" \nval maxDepth = 20\nval maxBins = 100 ","user":"anonymous","dateUpdated":"2017-03-16T13:39:22+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nnumClasses: Int = 32\n\ncategoricalFeaturesInfo: scala.collection.immutable.Map[Int,Int] = Map()\n\nnumTrees: Int = 3\n\nfeatureSubsetStrategy: String = auto\n\nimpurity: String = gini\n\nmaxDepth: Int = 20\n\nmaxBins: Int = 100\n"}]},"apps":[],"jobName":"paragraph_1489671420911_167470124","id":"20170306-090923_537053742","dateCreated":"2017-03-16T13:37:00+0000","dateStarted":"2017-03-16T13:39:22+0000","dateFinished":"2017-03-16T13:39:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1649"},{"text":"val model = RandomForest.trainClassifier(trainingData, numClasses, categoricalFeaturesInfo, numTrees, featureSubsetStrategy, impurity, maxDepth, maxBins) ","user":"anonymous","dateUpdated":"2017-03-16T13:39:27+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1489671420912_177858344","id":"20170306-090936_1085551259","dateCreated":"2017-03-16T13:37:00+0000","dateStarted":"2017-03-16T13:39:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1650","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\n\nmodel: org.apache.spark.mllib.tree.model.RandomForestModel =\nTreeEnsembleModel classifier with 3 trees\n"}]},"dateFinished":"2017-03-16T17:13:59+0000"},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1489686226432_872585245","id":"20170316-174346_1967866251","dateCreated":"2017-03-16T17:43:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2785","text":"val labelAndPredsTrain = trainingData.map { point => \n    val prediction = model.predict(point.features) \n    (point.label, prediction) \n} \n\nval trainErr = labelAndPredsTrain.filter(r => r._1 != r._2).count.toDouble / testData.count() \nprintln(\"Train Error = \" + trainErr) ","dateUpdated":"2017-03-16T17:45:39+0000","dateFinished":"2017-03-16T17:46:06+0000","dateStarted":"2017-03-16T17:45:39+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nlabelAndPredsTrain: org.apache.spark.rdd.RDD[(Double, Double)] = MapPartitionsRDD[1187] at map at <console>:45\n\ntrainErr: Double = 0.7097018272453686\nTrain Error = 0.7097018272453686\n"}]}},{"text":"// Evaluate model on test instances and compute test error \nval labelAndPreds = testData.map { point => \n    val prediction = model.predict(point.features) \n    (point.label, prediction) \n} \n\nval testErr = labelAndPreds.filter(r => r._1 != r._2).count.toDouble / testData.count() \nprintln(\"Test Error = \" + testErr) \n","dateUpdated":"2017-03-16T17:47:18+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1489671420912_177858344","id":"20170306-092225_238896979","dateCreated":"2017-03-16T13:37:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1651","user":"anonymous","dateFinished":"2017-03-16T17:47:14+0000","dateStarted":"2017-03-16T17:46:19+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nlabelAndPreds: org.apache.spark.rdd.RDD[(Double, Double)] = MapPartitionsRDD[1191] at map at <console>:47\n\ntestErr: Double = 0.8769750649653005\nTest Error = 0.8769750649653005\n"}]}},{"text":"println(\"Learned classification forest model:\\n\" + model.toDebugString)","dateUpdated":"2017-03-16T13:37:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1489671420913_177473595","id":"20170307-055310_1563361090","dateCreated":"2017-03-16T13:37:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1652"}],"name":"RandomForestWithLibSVM","id":"2CC3ZYFS7","angularObjects":{"2BRWU4WXC:shared_process":[],"2AM1YV5CU:shared_process":[],"2AJXGMUUJ:shared_process":[],"2ANGGHHMQ:shared_process":[],"2AKK3QQXU:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}
